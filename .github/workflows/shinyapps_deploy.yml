# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

name: shiny-deploy

on:
  push:
    branches:
      - shiny-server-main
      - release*

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
    env:
      CONDA_ENV_NAME: "virtual_env"

    steps:
      - name: Install libcurl
        run: sudo apt-get install -y libcurl4-openssl-dev
 
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-renv@v1

      - name: Install rsconnect
        shell: Rscript {0}
        run: install.packages(c("rsconnect", "yaml", "reticulate"))
        
      - name: Conda
        shell: Rscript {0}
        run: |
          library(yaml)
          library(rsconnect)
          library(reticulate)
          environment<-read_yaml("environment.yml")
          # expression to find pip
          dependencies <- environment$dependencies
          pip_index <- ("pip"==sapply(dependencies, function(x) names(x)))
          # the items in 'dependencies' NOT under 'pip'
          packages <- unlist(dependencies[which(!pip_index)])
          # add in the items under 'pip'
          # packages <- c(packages, dependencies[which(pip_index)][[1]]$pip)
          env_name<-Sys.getenv("CONDA_ENV_NAME")
          # conda_create(
          #  envname = env_name,
          #  packages = packages,
          #  forge = TRUE,
          #  channel = environment$channels
          # )
          # use_condaenv(condaenv=env_name)
          virtualenv_create(
            envname = env_name,
            packages = packages
          )
          use_virtualenv(env_name)
          py_install("tabletext", pip=TRUE)
          py_install("schematicpy", pip=TRUE)
        
      - name: Authorize and deploy app
        shell: Rscript {0}
        run: |
          branch<-Sys.getenv("GITHUB_REF_NAME")
          repo<-Sys.getenv("GITHUB_REPOSITORY")
          appName<-strsplit(repo, "/")[[1]][2]
          if (!startsWith(branch, "release")) {
             appName <- paste(appName, "staging", sep="-")
          }
          rsConnectUser <-"${{ secrets.RSCONNECT_USER }}"
          rsConnectToken <- "${{ secrets.RSCONNECT_TOKEN }}"
          rsConnectSecret <- "${{ secrets.RSCONNECT_SECRET }}"
          
          # create config file
          config <- "CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}"
          config <- c(config, "CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}")
          config <- c(config, "CONDA_ENV_NAME: ${{ env.CONDA_ENV_NAME }}")
          appUrl<- sprintf("https://%s.shinyapps.io/%s", rsConnectUser, appName)
          config <- c(config, sprintf("APP_URL: %s", appUrl))
          
          configFileConn<-file("config.yaml")
          tryCatch(
             writeLines(config, configFileConn),
             finally=close(configFileConn)
          )
          rsconnect::setAccountInfo(rsConnectUser, rsConnectToken, rsConnectSecret)
          rsconnect::deployApp(appName = appName)
 